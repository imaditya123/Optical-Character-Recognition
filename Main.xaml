<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="849.6,1633.6" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:sd1="clr-namespace:System.Data;assembly=System.Data" xmlns:sma="clr-namespace:System.Management.Automation;assembly=System.Management.Automation" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="46">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="34">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main process" sap:VirtualizedContainerService.HintSize="493.6,2637.6" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="fileList" />
      <Variable x:TypeArguments="sd1:DataTable" Name="dataTable" />
      <Variable x:TypeArguments="x:Int32" Name="counter">
        <Variable.Default>
          <Literal x:TypeArguments="x:Int32" Value="1" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="452,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[fileList]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles("source")]</InArgument>
      </Assign.Value>
    </Assign>
    <Sequence DisplayName="Writing Headers" sap:VirtualizedContainerService.HintSize="452,68.8" sap2010:WorkflowViewState.IdRef="Sequence_21">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:WriteCell Cell="A1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_1" SheetName="Sheet1" Text="Product Name" WorkbookPath="output.xlsx" />
      <ui:WriteCell Cell="B1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_2" SheetName="Sheet1" Text="Model Name" WorkbookPath="output.xlsx" />
      <ui:WriteCell Cell="C1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_3" SheetName="Sheet1" Text="Prepared For" WorkbookPath="output.xlsx" />
      <ui:WriteCell Cell="E1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_4" SheetName="Sheet1" Text="Prepared By" WorkbookPath="output.xlsx" />
      <ui:WriteCell Cell="D1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_5" SheetName="Sheet1" Text="Test Date" WorkbookPath="output.xlsx" />
      <ui:WriteCell Cell="F1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_6" SheetName="Sheet1" Text="Date Of Report" WorkbookPath="output.xlsx" />
      <ui:WriteCell Cell="G1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_7" SheetName="Sheet1" Text="Report No" WorkbookPath="output.xlsx" />
    </Sequence>
    <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="452,2336" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[fileList]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="png" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="375.2,1372.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="preparedFor" />
              <Variable x:TypeArguments="x:String" Name="varProductName" />
              <Variable x:TypeArguments="x:String" Name="modelName" />
              <Variable x:TypeArguments="x:String" Name="preparedBy" />
              <Variable x:TypeArguments="x:String" Name="testDate" />
              <Variable x:TypeArguments="x:String" Name="ReportDate" />
              <Variable x:TypeArguments="x:String" Name="reportNo" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="333.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="[png.ToString]" />
            <ui:InvokePowerShell x:TypeArguments="sma:PSObject" ContinueOnError="{x:Null}" CommandText="[png.ToString]" DisplayName="Invoke Power Shell" sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="InvokePowerShell`1_1" />
            <Sequence DisplayName="get product name" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_8">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Photos Applicati'" sap:VirtualizedContainerService.HintSize="433.6,409.6" sap2010:WorkflowViewState.IdRef="WindowScope_3" InformativeScreenshot="2796a3222e384ae4f18b6e379118d9a5" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,262.4" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  1.PNG'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_3">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_3" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                              <ui:GoogleOCR.AllowedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.AllowedCharacters>
                              <ui:GoogleOCR.DeniedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.DeniedCharacters>
                            </ui:GoogleOCR>
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="84f20820-d6fa-4889-adb6-a3b9020cbf80" InformativeScreenshot="9f8b3efcab5621338fc9bdb551b712b9" Selector="&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.PNG' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="602, 235, 346, 26" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[varProductName]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <Sequence DisplayName="get Model Name" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_10">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Photos Applicati'" sap:VirtualizedContainerService.HintSize="433.6,409.6" sap2010:WorkflowViewState.IdRef="WindowScope_4" InformativeScreenshot="819041b42bdfae6c13f1c4248fab97ed" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' idx='*' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,262.4" sap2010:WorkflowViewState.IdRef="Sequence_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  3.PNG'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_4">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:MicrosoftOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Microsoft OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="MicrosoftOCR_1" Image="[Image]" Language="English (United Kingdom)" Profile="Screen" Scale="1" />
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="2e3c9f46-3d50-47d9-a992-1bc6f8cb3ed4" InformativeScreenshot="0d2aba326cf156c958afabea3be01e28" Selector="&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.PNG' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="600, 296, 277, 30" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[modelName]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <Sequence DisplayName="get preparedFor" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Photos Applicati'" sap:VirtualizedContainerService.HintSize="433.6,409.6" sap2010:WorkflowViewState.IdRef="WindowScope_5" InformativeScreenshot="7a7f3760f95ae46689aee4847acdf2e3" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' idx='*' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,262.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  3.PNG'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_5">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_4" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                              <ui:GoogleOCR.AllowedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.AllowedCharacters>
                              <ui:GoogleOCR.DeniedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.DeniedCharacters>
                            </ui:GoogleOCR>
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="59c7942c-5e9a-4af5-abe4-b4766f64171e" InformativeScreenshot="174ce5b6e1024f7f5ac27937f835970e" Selector="&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.PNG' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="597, 333, 280, 36" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[preparedFor]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <Sequence DisplayName="get preparedBy" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Photos Applicati'" sap:VirtualizedContainerService.HintSize="433.6,409.6" sap2010:WorkflowViewState.IdRef="WindowScope_6" InformativeScreenshot="2d242a25e853b52f4281aa42bf500a28" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' idx='*' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,262.4" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  3.PNG'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_6">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_5" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                              <ui:GoogleOCR.AllowedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.AllowedCharacters>
                              <ui:GoogleOCR.DeniedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.DeniedCharacters>
                            </ui:GoogleOCR>
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="654876fe-f1ec-4f61-b423-7969462cc998" InformativeScreenshot="63f7bc7d9d7c6b0962e8b5181ac06515" Selector="&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.PNG' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="598, 397, 293, 32" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[preparedBy]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <Sequence DisplayName="get ReportDate" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_16">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Photos Applicati'" sap:VirtualizedContainerService.HintSize="433.6,409.6" sap2010:WorkflowViewState.IdRef="WindowScope_7" InformativeScreenshot="cc10bfa4b725d8cf924c6ab87ff173f6" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' idx='*' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,262.4" sap2010:WorkflowViewState.IdRef="Sequence_15">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  3.PNG'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_7">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_6" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                              <ui:GoogleOCR.AllowedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.AllowedCharacters>
                              <ui:GoogleOCR.DeniedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.DeniedCharacters>
                            </ui:GoogleOCR>
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="037cad19-0b4f-43e9-8008-4a44e0278eab" InformativeScreenshot="c908930cc38087c9f3d7004c9819cdbb" Selector="&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.PNG' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="598, 496, 283, 31" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[ReportDate]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <Sequence DisplayName="get Report No" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_18">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Photos Applicati'" sap:VirtualizedContainerService.HintSize="433.6,409.6" sap2010:WorkflowViewState.IdRef="WindowScope_8" InformativeScreenshot="cf462567060ed81547b4eee7b6e570e4" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' idx='*' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,262.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  3.PNG'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_8">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_7" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                              <ui:GoogleOCR.AllowedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.AllowedCharacters>
                              <ui:GoogleOCR.DeniedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.DeniedCharacters>
                            </ui:GoogleOCR>
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="7de113b8-54d2-4f52-8e34-a7bf4904b4ba" InformativeScreenshot="f230a7e1109ab4cc9b760c314f26daa6" Selector="&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.PNG' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="599, 532, 330, 29" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[reportNo]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <Sequence DisplayName="get TestDate" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'Photos Applicati'" sap:VirtualizedContainerService.HintSize="433.6,409.6" sap2010:WorkflowViewState.IdRef="WindowScope_9" InformativeScreenshot="acfbfa4501871e7207f39df35c3bed45" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' idx='*' /&gt;">
                <ui:WindowScope.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="375.2,262.4" sap2010:WorkflowViewState.IdRef="Sequence_19">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:GetOCRText WordsInfo="{x:Null}" DisplayName="Get OCR Text 'text  3.PNG'" sap:VirtualizedContainerService.HintSize="333.6,169.6" sap2010:WorkflowViewState.IdRef="GetOCRText_9">
                        <ui:GetOCRText.OCREngine>
                          <ActivityFunc x:TypeArguments="sd:Image, scg:IEnumerable(scg:KeyValuePair(sd:Rectangle, x:String))">
                            <ActivityFunc.Argument>
                              <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                            </ActivityFunc.Argument>
                            <ui:GoogleOCR FilterRegion="{x:Null}" Output="{x:Null}" Text="{x:Null}" ComputeSkewAngle="False" DisplayName="Tesseract OCR" ExtractWords="False" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="GoogleOCR_8" Image="[Image]" Invert="False" Language="eng" Profile="Screen" Scale="2">
                              <ui:GoogleOCR.AllowedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.AllowedCharacters>
                              <ui:GoogleOCR.DeniedCharacters>
                                <InArgument x:TypeArguments="x:String">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:GoogleOCR.DeniedCharacters>
                            </ui:GoogleOCR>
                          </ActivityFunc>
                        </ui:GetOCRText.OCREngine>
                        <ui:GetOCRText.Target>
                          <ui:Target Element="{x:Null}" Id="7131f27b-8b53-4259-871e-31fe3fc4660e" InformativeScreenshot="492890e09b08e223b20962b17dce1431" Selector="&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.PNG' /&gt;">
                            <ui:Target.ClippingRegion>
                              <ui:Region Rectangle="597, 462, 324, 31" />
                            </ui:Target.ClippingRegion>
                            <ui:Target.TimeoutMS>
                              <InArgument x:TypeArguments="x:Int32" />
                            </ui:Target.TimeoutMS>
                            <ui:Target.WaitForReady>
                              <InArgument x:TypeArguments="ui:WaitForReady" />
                            </ui:Target.WaitForReady>
                          </ui:Target>
                        </ui:GetOCRText.Target>
                        <ui:GetOCRText.Text>
                          <OutArgument x:TypeArguments="x:String">[testDate]</OutArgument>
                        </ui:GetOCRText.Text>
                      </ui:GetOCRText>
                    </Sequence>
                  </ActivityAction>
                </ui:WindowScope.Body>
              </ui:WindowScope>
            </Sequence>
            <Sequence DisplayName="Save the data in excel" sap:VirtualizedContainerService.HintSize="333.6,68.8" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:WriteCell Cell="[&quot;A&quot;+(counter+1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_8" SheetName="Sheet1" Text="[varProductName]" WorkbookPath="output.xlsx" />
              <ui:WriteCell Cell="[&quot;B&quot;+(counter+1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_9" SheetName="Sheet1" Text="[modelName]" WorkbookPath="output.xlsx" />
              <ui:WriteCell Cell="[&quot;C&quot;+(counter+1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_10" SheetName="Sheet1" Text="[preparedFor]" WorkbookPath="output.xlsx" />
              <ui:WriteCell Cell="[&quot;E&quot;+(counter+1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_11" SheetName="Sheet1" Text="[preparedBy]" WorkbookPath="output.xlsx" />
              <ui:WriteCell Cell="[&quot;D&quot;+(counter+1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_12" SheetName="Sheet1" Text="[testDate]" WorkbookPath="output.xlsx" />
              <ui:WriteCell Cell="[&quot;F&quot;+(counter+1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_13" SheetName="Sheet1" Text="[ReportDate]" WorkbookPath="output.xlsx" />
              <ui:WriteCell Cell="[&quot;G&quot;+(counter+1).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="333.6,116" sap2010:WorkflowViewState.IdRef="WriteCell_14" SheetName="Sheet1" Text="[reportNo]" WorkbookPath="output.xlsx" />
            </Sequence>
            <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[counter+1]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:CloseApplication DisplayName="Close Application 'text  1.PNG'" sap:VirtualizedContainerService.HintSize="333.6,107.2" sap2010:WorkflowViewState.IdRef="CloseApplication_1">
              <ui:CloseApplication.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="48040370-dada-4a96-bdf3-9da823e6a196" InformativeScreenshot="daf8d7a1fdc140f8f14dc10689dd0e92" Selector="&lt;wnd app='applicationframehost.exe' appid='Microsoft.Windows.Photos_8wekyb3d8bbwe!App' title='Photos' /&gt;&lt;uia automationid='AutomationBackgroundControl' cls='Photos.Viewer.Controls.AccessibleContentControl' name='*.PNG' /&gt;">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:CloseApplication.Target>
            </ui:CloseApplication>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>